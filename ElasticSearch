Introdução
o que é elastic search ? 

Nosso objetivo
por que usar ? 

Pré-requisitos
explicar ambiente 
	CentoOS 7 no google cloud 
explicar o que será feito 

#instalar 
	#java
		sudo yum -y install java 
	wget 
		sudo yum -y install wget 
	#elk
		sudo wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.2.tar.gz

		tar zfxv elasticsearch-6.3.2.tar.gz

		mv elasticsearch-6.3.2 usr/local/elasticsearch
	
	#criando user para inciiar o elasticsearch
		useradd elastic 
		passwd elastic

		chown -R elastic usr/local/elasticsearch/*

		#start service elasticsearch
		./usr/local/elasticsearch/bin/elasticsearch &

	#testar se deu certo
		curl -XGET "http://localhost:9200"

	#kibana
		wget https://artifacts.elastic.co/downloads/kibana/kibana-6.3.2-linux-x86_64.tar.gz

		tar zfxv kibana-6.3.2-linux-x86_64.tar.gz
		mv kibana-6.3.2-linux-x86_64 kibana

	#start service kibana 
		./kibana/bin/kibana &

	#ngiex
		--Agora use o yum para instalar o Nginx e o httpd-tools:
		sudo yum -y install nginx httpd-tools

		--Use o htpasswd para criar um usuário admin, chamado "kibanaadmin" (você deve usar outro nome), que pode acessar a interface da Web do Kibana:
		sudo htpasswd -c /etc/nginx/htpasswd.users kibanaadmin

		--Digite uma senha no prompt. Lembre-se deste login, pois você precisará dele para acessar a interface da Web do Kibana.
		--Agora abra o arquivo de configuração do Nginx no seu editor favorito. Nós usaremos o vi:
		sudo vi /etc/nginx/nginx.conf

		--Encontre o bloco de servidor padrão (inicia com server {), o último bloco de configuração no arquivo e exclua-o. Quando você terminar, as duas últimas linhas no arquivo devem ficar assim:
		    include /etc/nginx/conf.d/*.conf;
				}

		--Agora vamos criar um bloco de servidor Nginx em um novo arquivo:
		sudo vi /etc/nginx/conf.d/kibana.conf

		--Cole o seguinte bloco de código no arquivo. Certifique-se de atualizar o server_namepara corresponder ao nome do seu servidor:
	server {
    listen 80;

    server_name example.com;

    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/htpasswd.users;

    location / {
        proxy_pass http://localhost:5601;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;        
    	}
	}

	Salvar e sair. Isso configura o Nginx para direcionar o tráfego HTTP do seu servidor para o aplicativo Kibana, que está escutando localhost:5601. Além disso, o Nginx usará o htpasswd.usersarquivo criado anteriormente e exigirá autenticação básica.

	#Agora inicie e ative o Nginx para colocar nossas alterações em vigor:	
	sudo systemctl start nginx
	sudo systemctl enable nginx

Este tutorial assume que o SELinux está desativado. Se este não for o caso, você pode precisar executar o seguinte comando para o Kibana funcionar corretamente:sudo setsebool -P httpd_can_network_connect 1

migrar dados sql to elk 

install logstash 
wget https://artifacts.elastic.co/downloads/logstash/logstash-6.3.2.tar.gz

tar zfxv logstash-6.3.2.tar.gz

mv logstash-6.3.2 /usr/local/logstash

wget https://www.microsoft.com/en-us/download/confirmation.aspx?id=54671

--configurar memoria
/*
Alterar os parâmetros Xms e Xmx que representam, respectivamente, o valor inicial e final da memória dedicada ao java. Sendo que o recomendado é a metade da memória RAM disponível no servidor (porém este valor pode variar para mais ou para menos. Não recomendo que este valor ultrapasse 60% do valor da RAM disponível), no nosso exemplo a máquina possui 8G
*/ 
sudo vi /etc/elasticsearch/jvm.options
